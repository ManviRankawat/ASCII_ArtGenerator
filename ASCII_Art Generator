{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNDFIMmhMgHPR+vTyvLaNQl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ManviRankawat/ASCII_ArtGenerator/blob/main/ASCII_Art%20Generator\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IKkbgQBu6MgE",
        "outputId": "4fec71a8-b0d8-434f-e9a5-07c6743a2b47"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (10.4.0)\n"
          ]
        }
      ],
      "source": [
        "pip install pillow\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from PIL import Image\n",
        "\n",
        "ASCII_CHARS = ['@', '#', 'S', '%', '&', '?', '!', '(' ,')','/','*', '+','~',';', ':', ',', '.']\n",
        "\n",
        "def resize_image(image, new_width=60):\n",
        "    width, height = image.size\n",
        "    aspect_ratio = height/width\n",
        "    new_height = int(aspect_ratio * new_width * 0.55)\n",
        "    return image.resize((new_width, new_height))\n",
        "\n",
        "\n",
        "def grayscale_image(image):\n",
        "    return image.convert(\"L\")\n",
        "\n",
        "def map_pixels_to_ascii(image):\n",
        "    pixels = image.getdata()\n",
        "    ascii_str = \"\"\n",
        "    for pixel in pixels:\n",
        "        ascii_str += ASCII_CHARS[pixel // 25]\n",
        "    return ascii_str\n",
        "\n",
        "def image_to_ascii(image_path, new_width=100):\n",
        "\n",
        "    try:\n",
        "        image = Image.open(image_path)\n",
        "    except Exception as e:\n",
        "        print(f\"Unable to open image file {image_path}. Error: {e}\")\n",
        "        return\n",
        "\n",
        "    image = resize_image(image, new_width)\n",
        "    image = grayscale_image(image)\n",
        "\n",
        "    ascii_str = map_pixels_to_ascii(image)\n",
        "\n",
        "    ascii_len = len(ascii_str)\n",
        "    ascii_img = \"\"\n",
        "    for i in range(0, ascii_len, new_width):\n",
        "        ascii_img += ascii_str[i:i+new_width] + \"\\n\"\n",
        "\n",
        "    return ascii_img\n",
        "\n",
        "def save_ascii_art(ascii_img, output_file):\n",
        "    with open(output_file, 'w') as f:\n",
        "        f.write(ascii_img)"
      ],
      "metadata": {
        "id": "f6-irf3s6UBI"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "if __name__ == \"__main__\":\n",
        "\n",
        "    image_path = \"/content/sample_data/Mona Lisa.jpg\"\n",
        "    output_file = \"ascii_art.txt\"\n",
        "\n",
        "    ascii_art = image_to_ascii(image_path, new_width=80)\n",
        "    if ascii_art:\n",
        "        print(ascii_art)\n",
        "        save_ascii_art(ascii_art, output_file)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rlzE1gil8LmG",
        "outputId": "288b1abf-5971-4ff8-f027-796687921bf8"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "!!(((((((((((((((((((((((!!!((((((!?&%SSS%%%&?!(((((((((!!!!(((!((((((((((!!!!!!\n",
            "!((((((((((((((((((((((((((((((!&S#S%##@@@@@##SS&!(((((((((((((((((((((((((!!!!!\n",
            "!(((((((())))((()))((((((((()(?S#S%&%SS#@@@@@@@@@#&((((((((((((((((((((((((((!!!\n",
            "?(()))))))))))()))))((((())))&S%?!(((!?&%S##@@@@@@@S!)()(((((((((())(((((((((!!!\n",
            "!(()))))))))))))))))))())))(&S?)//////)(!?&S##@@@@@@#!)))))))))))))))()((((((((!\n",
            "(()))))))///)))))))))))))/)&@&(////////)(!&%S#@@@@@@@S()(()))))))))))))))(((((((\n",
            "!()))(()////////))))))))/)?S#?()//////)((!??&%#@@@@@@@&!!(((((((()))))))))((((((\n",
            "?!!!!!!())))(()///))/)//)?%#S!)))/////))(((!?&S#@@@@@@#?&???!(((!())))))))((!!(!\n",
            "%&&&???!!!!!!!!!!()/////(&S#S?!!!())(?&???&&&%S@@@@@@@#%%&&???!!?!()))))))((!!??\n",
            "S%&&????????&&&?!?(/))))?%S##%%&S&((&%??SSSS&&%#@@@@@@@S%%%&&&?&&?!()))))((!!!?!\n",
            "S%&?????&&??%&&&?&!(???!?SS@%(((!()(&?((!!!((?%#@@@@@@@SS%%%&&&%&&?())))(((!!???\n",
            "S%%&&&&&&&&%%&%%%%%%%&S%%S#@S()))))(!())//)(?&S@@@@@@@@#%%%&&&&%%%&?(((((((!!!?&\n",
            "SSS%%%%%%&&&%%%SSS%SSSS###S##!)))(/(!!)))((?&%#@@@@@@@@#S%%&&&&?????!!!!??&&??&%\n",
            "###S%%S%%%%%&&%%%%%SSS#####@@&!()(!%S&()(!?&%S#@@@@@@@@@###SSSSSS%%&&&&&%%SSSS##\n",
            "####%%%%%%%S%%%%%S%SSS###@##@S?!!(!&%&??!!?&%S#@@@@@@@@###SSSSSSSSSSSS%%%%%SS###\n",
            "###S%%%SS%%%SSSSSSSSSSSS####@@%!((!?&&??!?&%%##@@@@@@@@@#SSSSSSSSSSSS%%%%SSSS###\n",
            "###SSSSSSSSSSSSSSS%%%%%SSS#@#@@#&()((!??&&%SS#@@@@@@@@@@#SSSSSSSSSSSSSSSSSSSS###\n",
            "#######%SSSSSSSSSSS%%%%%S#####@@@S?!!?&%SSS###@@@@@@@@@@#SSSS%%%SSSS%%SSS%SSS###\n",
            "###S###SSSSSSSSS%%%&&&?&S##@#@@@@@@#############@@@@@@@@@#SSSSSSSSSSSS###SSSSS##\n",
            "####@###SS%%%&&&&&????&&%S####@@@@@@&&%S#SSS%%%S#@@@@@@@@#SSSS%%SSSSS##SSSSS####\n",
            "###S#SS%%%&&&&%%&&&&&&&&%S###@@@@@@@&!!?&&&&&?&&S##@@@#@@##SS%%%%&&&%&&&&&%%S###\n",
            "#S%%%%&&&&&%%SS%#SS%SSS##@@@@@@@@@#%?!!!!!!!!!!?%#####S@@@@@@###SS##%???&%%%S#@@\n",
            "#SS%%S%%%&%SS%S%#@#@@##@@@@@@@@#%?!()((((((((((!&S##SS#@@@@@###S%%%%&??&%%%%S@@#\n",
            "##SS##%%%%%%%&%S#@S@@##@@@@@@#%!())))/)))))))((!&SSS%S#@@@@@@#SS&!!!??&&&%%%SS##\n",
            "#SSSSS%&%&%&&&SS##S#@###@@@#S%!))//////)///)))(!&%%S%#@@@@###@##S&&????&&&&&%%S#\n",
            "#SSS%SS&????&&%SSS%SS#@@@@S%&?)////////////)))(!&%%SS#@@#S%%S#@@#S%%&&?&??????%#\n",
            "#SSSS#SSS%&???&%%%%#@@@@@#&!!)//////////////))(!&&SSS%%&&&&&%%#@@@@##SS%&%&&?&&%\n",
            "#S%%%%S%SSS%&&&&?%#@@@@@@%!))////////////////)(!&&%&&???&&%SS#@@@@@@@@#@@@#S&&?%\n",
            "#SSSSS%%&%%&&&&?&#@@@#@@#%&()////////////////)(!?&&&%SS###@@@@@@@@@@@@@#@@@#S%&%\n",
            "#SS%&&&&&&&?&&%#@@@@####S%%&&?!!!()////////)(?&&%S###@@@@@@@@@@@@@@@@@@#S#####@@\n",
            "@S%&%&&&%&&&%%@@@@@@#@SS%%SS%%%%%&&???!!!!??&%%S##@@@#####@@@@@@@@@@@@@@##S####@\n",
            "@#S%%&&&&&&&?S@@@@@@@@SSSS#SSS%%%%%%%%%%%%%%S##@@@@@##SS##@@@@@@@@@@@@@@@###@@#@\n",
            "@@#SSS%%%%%%%#@@@@@@@#S#######S%%%%%SSSSSSS#@@@@@@########S%S####@@@@@@@@#SSS@@@\n",
            "@@#%%%%%%%%SS#@@@@@@@####@####S#SSSS##SS##@@@@@@@@#@@@##S%%%SSS##@@@@@@@@@###@@@\n",
            "@#%&&???&??%S@@@@@@@@@@@@@#@@#@@#####S###@@@@@@@@@@@@@SSS%%%S#@@@@@@@@@@@@@###@@\n",
            "#%&&???????S@@@@@@@@@@@@@@#@@@@@@@@####@@@@@@@@@@@@@@#SSS%S#@@@@@@@@@@#@@@@SSS#@\n",
            "#SSS%%%%%%#@@@@@#@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@######@@@@@@@@@@@@@@@@@@###@\n",
            "@##SS%SS#@@@@@#####@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "##SSSS#@@@@@@###SS##@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "####@@@@@######SSS###@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@\n",
            "@##@@@@@@@##@@@##@@@#@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@\n",
            "@@@@@#@@@@########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@##SS%SSSSSS#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@##S%%&%S%%%%%SS%&??&%##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@##%&%S%%S%SS%?()//))((!?%%S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@#%SS%S#SSS#&?()))))))(((((!%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "    image_path = \"/content/sample_data/George Washington.jpg\"\n",
        "    output_file = \"ascii_art.txt\"\n",
        "\n",
        "    ascii_art = image_to_ascii(image_path, new_width=80)\n",
        "    if ascii_art:\n",
        "        print(ascii_art)\n",
        "        save_ascii_art(ascii_art, output_file)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f-MLGLQTB4wF",
        "outputId": "cab00b73-6499-4c7e-a8b6-591d4cbc56b8"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@#@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@#@@@@#@@########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@##@##################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@##############################@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@#@####################SSSS#####@#####@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@#####################S&?!!!!!??&&%S#########@@@@@@@@@@@@@@#@@@@@\n",
            "@@@@@@@@@@@@@@@####################%?!(((!!!!!!!!??&%###########@###@##@###@@@@@\n",
            "@@@@@@@@@@@@@@###################S?((((((((((!!!!???&&%#########@@@#@@###@@@@@@@\n",
            "@@@@@@@@@@@#####################%!((((()))(((!!!!???&&%SS#########@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@#####################&!((((())))(((!????&&&%%%S############@#@####@@@@\n",
            "@@@@@@@@######################%?!(((((()))((!?&?&&&%%%%%%%##################@@@@\n",
            "@@@@@@@@#####################S&?!!((((((!!!!!?&&?&%%%%%%%%S################@@@@@\n",
            "@@@@@@@@#####################%?&&&&?((?%%%%&?&&&&&%%%%%&&%%SS################@@@\n",
            "@@##@@@####################S%&?&%%%&(?%%&&%%&&&%&&&%%%&&&%%SS################@@@\n",
            "@@#########################%&????&???&%???&&&??&%&&&%&&%%%S##################@@@\n",
            "##########################%&&&&??!?!?&&??!!!???%%%%%%%%%S######################@\n",
            "#########################SSS%%%&???!?&&?!!!?&&&SSS%%%S##@@@###S#S##############@\n",
            "##########################S#S%%&?!??%SS%!!!?&%%S#SSS##@@#@##SSSS###############@\n",
            "##########################SSSS%&?!!?&&&?!!??&%S##SS#@#####SSSSS#################\n",
            "########################SSSSSSS%???&&?&&&&?&%%S#########SSSSSSS#################\n",
            "########################SSSSSSSS&?????????&&%SS###SS#@##SSSSSS##################\n",
            "########################SSSSSSSSS&??????&&%%S###SSSS#@##########################\n",
            "##########################SSSSSSSS%&&&&%SSS###SS%%%#@@@@@@@@####################\n",
            "#########################SSSSSSSSSSS&&SSSSSSSS%%%%#@@@@@@@@@@###################\n",
            "#########################SSSSSSSSSSS!)!%SSS%%%%%S#@@@@@@@@@@@@##################\n",
            "#########################S##SSSSS###!)))!&&&%%S#@@@@@@@@@@@@@@##################\n",
            "##############################S####@&())))((!%@@@@@@@@@@@@@@@@@#################\n",
            "############################SS#@@@@#&?!((())(#@@@@@@@@@@@@@@@@@#################\n",
            "###############################@@@S&&??!!!?&#@@@@@@@@@@@@@@@@@@@@@##############\n",
            "##############################@#S%&??????#@@@@@@@@@@@@@@@@@@@@@@@@@@@@##########\n",
            "@###########################@@#%&&&&&&?&#@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########\n",
            "@######################@@@@@@#%&&&&&??S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#######\n",
            "@@###################@@@@@@@#&?????&%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####\n",
            "@@##################@@@@@@@@S&??%%%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####\n",
            "@@@################@@@@@@@@@S&?&%%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####\n",
            "@@@@##############@@@@@@@@@@S&&&%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###\n",
            "@@@@#############@@@@@@@@@@@S&%S#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#\n",
            "@@@@@###########@@@@@@@@@@@@S%%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#\n",
            "@@@@@@@@@@@@##@@@@@@@@@@@@@@#S#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "    image_path = \"/content/sample_data/Girl-with-a-Pearl-Earring-by-Johannes-Vermeer-1665.jpg\"\n",
        "    output_file = \"ascii_art.txt\"\n",
        "\n",
        "    ascii_art = image_to_ascii(image_path, new_width=60)\n",
        "    if ascii_art:\n",
        "        print(ascii_art)\n",
        "        save_ascii_art(ascii_art, output_file)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GccgVKzqDA25",
        "outputId": "b05bca0e-47e8-42cb-aceb-95ad732bcc88"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#S%%%%%SS##@@@@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S&&?&&())((?%##@@@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@@#%&?(((!??!!((((?%S##@@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@@@##S%&&??????!!((???&&?!&S###@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@@S&?!!!!?????&&%%%&?!??&&&&&%S#@@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@#&!!!!!!!??????&&&%%S%%??%%%S&S###@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@%?!!!!!!!!???&??&&&&&%SS#S&%S#%&###@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@&!!!!!!!?!???????&&&&&&SS###SSS%?S##@@@@@@@@@@\n",
            "@@@@@@@@@@@@@S????!!!???&%&&?&??%%&&S########&!%#S#@@@@@@@@@\n",
            "@@@@@@@@@@@@@%!(((((!??&%%%S%%%&S##S#########%!%#SS#@@@@@@@@\n",
            "@@@@@@@@@@@@#!)))))(((!?&%&%##SSS############S!%#S%#@@@@@@@@\n",
            "@@@@@@@@@@@#?(()))(((((!?&%S##################!%##%#@@@@@@@@\n",
            "@@@@@@@@@@@#%??!)(!!??!!!!?%S###@#############?&S#%S@@@@@@@@\n",
            "@@@@@@@@@@@@S!S%)!&&&??????&S################@&?%#%%##@@@@@@\n",
            "@@@@@@@@@@@#?!??)?%&?)(##S%SSS###############@%!%#S%###@@@@@\n",
            "@@@@@@@@@@@S)(()(&&?!!!&%S&&%SSS###########@@@S!?SS%S##@@@@@\n",
            "@@@@@@@@@@@S(()(?&%?!!!!!!!?&%SSS###########@@S!!%#%###@@@@@\n",
            "@@@@@@@@@@@#(((?&%%&!(!!!!?&%S##SS#######@@@@##?!&#&S##@@@@@\n",
            "@@@@@@@@@@@@?)!%SSSS?!!!!?&%S#SSSSS#####@@@@@@#??&#?&#S#@@@@\n",
            "@@@@@@@@@@@@%()(&%%&?!!??&&%SSSSSS##S##@@@@@@@#?!?#?!##S@@@@\n",
            "@@@@@@@@@@@@#?!&&&&&????&&%SSSSSSS####@@@@@@@@#!)?S&)%#S#@@@\n",
            "@@@@@@@@@@@@@S!&&&%S%&?&%%%S%%%%SS#%##@@@@@@@@#!)!S%)?#SS@@@\n",
            "@@@@@@@@@@@@@@%(!&%%&??&%%%%%%%%SSS?S##@@@@@##@!(!&%((##%#@@\n",
            "@@@@@@@@@@@@@@#!)(?&&&&&%%%%%%SSSS##SSSS%%%%SS#&!!?%!)S#%%@@\n",
            "@@@@@@@@@@@@@@@#%&&&%%SS%%%SSSS%%&??((((?&&%%S#%!?!?&)&#S%#@\n",
            "@@@@@@@@@@@@@@@@@@@##@@@S??&?()////(!?%S#######%!!??%(!#SSS@\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@@&()///)?&S#############?!!&%?(##%%#\n",
            "@@@@@@@@@@@@@@@@@@@@@@@@&)/)(!?&&%S############@?!(??%!%#%%S\n",
            "@@@@@@@@@@@@@@@@@@@@@@#!/)!?????&%#############@&((?!%&%#SS&\n",
            "@@@@@@@@@@@@@@@@@@@@@@&/!&?????&%SS############@%((!!%&&#%&!\n",
            "@@@@@@@@@@@@@@@@@@@@@@&?&??????&%S#############@S((!!&&?S%((\n",
            "@@@@@@@@@@@@@@@@@@@@@%&?&???&&&&&%S###########@@S!!!!&%?%S!(\n",
            "@@@@@@@@@@@@@@@@@@@@S&&?&&&&&?????%##########@@@S?!!(?S??S?(\n",
            "@@@@@@@@@@@@@@@@@@@S%&&%%&&&??????&###S######@@@S???!!SSS#S%\n",
            "@@@@@@@@@@@@@@@@@@#%&&&&&&???&&&&&&%##S#######@@S&&&??S#@@@@\n",
            "@@@@@@@@@@@@@@@@@@#%&&&?????&&&&&&&&SS###########%%%%%##@@@@\n",
            "@@@@@@@@@@@@@@@@@@S&&&?????&%%%%&%%&%SS##########@@@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@@S&&&??!??&%%%%%%%%%%S#############@@@@@@@@@\n",
            "@@@@@@@@@@@@@@@@S&&&&?&&&&&%%%%%%%%%%S########S#####@@@@@@@@\n",
            "@@@@@@@@@@@@@@@#&&&&?%SS%&%%%SSSSS%%%S########S######@@@@@@@\n",
            "@@@@@@@@@@@@@@#&&&&??%SS%&%%%SSSS%%%%S########SS#####@@@@@@@\n",
            "@@@@@@@@@@@@@#&&&&???%SS%&&%%SSSS%&&%S########SS######@@@@@@\n",
            "@@@@@@@@@@@@#%&&&???&%SS%&&%SSSSS%%%%S###############@@@@@@@\n",
            "@@@@@@@@@@@@%&&&???&&%SSS%&%SSSSS%%%%SS###############@@@@@@\n",
            "@@@@@@@@@@@S&&&???&&&%SSS%%%SSSSSS%%%SS###############@@@@@@\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "    image_path = \"/content/sample_data/Narendra_Modi.jpg\"\n",
        "    output_file = \"ascii_art.txt\"\n",
        "\n",
        "    ascii_art = image_to_ascii(image_path, new_width=80)\n",
        "    if ascii_art:\n",
        "        print(ascii_art)\n",
        "        save_ascii_art(ascii_art, output_file)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BCs_1JTUIILj",
        "outputId": "626e55f9-07ec-4498-e328-446531ab0dfa"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "################################################################################\n",
            "################################################################################\n",
            "################################################################################\n",
            "###########################################################################SSSSS\n",
            "#########################################################################SSSSSSS\n",
            "########################################SSS##########################SSSSSSSSSSS\n",
            "################################S%?!()))))))((?S##################SSSSSSSSSSSSSS\n",
            "#############################%?()//////////////)?%#############SSSSSSSSSSSSSSSSS\n",
            "###########################%()///)))))))))))))))))&#########SSSSSSSSSSSSSSSSSSSS\n",
            "#########################S?))))))))))))))))))))))))!%##SSSSSSSSSSSSSSSSSSSSSSSSS\n",
            "########################S!))((())//////////))(((((()/!S#SSSSSSSSSSSSSSSSSSSSSSSS\n",
            "#######################%()(!((())))))))))))))((((((!)/)%#SSSSSSSSSSSSSSSSSSSSSSS\n",
            "#######################?(!!!!!((((((((((((((!!!!!!!!()/(%SSSSSSSSSSSSSSSSSSSSSSS\n",
            "######################%(!??!!!!!!!!!!!!!!!!!!!!!!!??!)))!SSSSSSSSSSSSSSSSSSSSSSS\n",
            "######################!(!???!!!!((((!!(((((((((!?????!)))&SSSSSSSSSSSSSSSSSSSSSS\n",
            "#####################S((!??!()))(((((((()))))())(??&&?())(SSSSSSSSSSSSSSSSSSSSSS\n",
            "#####################S!(?&!()((((!??!!????&?&&??!!?&&?!?!!?%SSSSSSSSSSSSSSSSSSSS\n",
            "######################&(???&&&&%%%%&?(?&%SSSSS%S%??????&%&?&SSSSSSSSSSSSSSSSSSSS\n",
            "######################%??&%SSS##SSS%!/(&%%%%S%%&&&????!&&&&&SSSSSSSSSSSSSSSSSSSS\n",
            "#####################S%%??%%%%%&%%&!(/)(!???!!!!!!(!??!S&&?&SSSSSSSSSSSSSSSSSSSS\n",
            "###################SS#S%??!!!!!!!?!())))(!!((()))(!!??(&&??%SSSSSSSSSSSSSSSSSSSS\n",
            "###############SSSSSSSS&??!!!((!?!(!!????!?&?!!!!!!!?!(???&SSSSSSSSSSSSSSSSSS%%%\n",
            "#############SSSSSSSSSS%?&?????&&&%SS%%SS%??&%&&?????!(???SSSSSSSSSSSSSSSS%%%%%%\n",
            "#########SSSSSSSSSSSSSSS&&?&&&%%??&&%%%&!!(((!&%&&&??((!?%SSSSSSSSSSSS%%%%%%%%%%\n",
            "#####SSSSSSSSSSSSSSSSSSS%?&&%%%!((?&&&%&&??&&???&&??!((!%SSSSSSSSSS%%%%%%%%%%%%%\n",
            "###SSSSSSSSSSSSSSSSSSSSSS?&&%&??%SSSSSSSSSS###%?????((!&SSSSSSSS%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSS&?&&??%###SS%%%%%%%%%%?!!!!!(!&SSSSSS%%%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSS%!???!&&%&&&&?&?&&????!(!!!((!%SS%%%%%%%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSSS&!??!&?&???!!!(!!!!(((!!!!!&)!%SSS%%%%%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSSSS&?!!!(!!!!!!!!!(!(((((!!&S!//(!?%%%%%%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSSSSS%?!!!(((!!!!!!((((!!!&SS!////*/(!?&%%%%%%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSSSSSS%?!?!(!!!!!!!!!!!??&%!)))////(((((((!?&%%%%%%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSSSSSS%%&?!??????!!?????????!())))))))((((((((((((!??&%%%%%%%\n",
            "SSSSSSSSSSSSSSSSSSSSS%&&?!!!!??&!???&&&&???!!((()))))((((((((((((((((()))((!?&%%\n",
            "SSSSSSSSSSSSSSS%&??!!((((!!!???&!!!!!!?!!!!!(((((((!!!((((((((((((((((()))))))(!\n",
            "SSSSSSSSSSSS%?!(((((((((!!!!!???????????&&&&&&????!!!(((((((((((((((((()))))))))\n",
            "SSSSSSSSS%?!((((((((((!!!!!!!!??&&&&%%%%%%%&&&???!!!!((((((((((((((((((((((())((\n",
            "SSSSSSSS&((((((((((((((!!!!!!!!???&&&&&%&&&????!!!!!((((((((((((((((()(((((((()/\n",
            "SSSSSS&(((((((((((((((!!!!!!!!!?????&&&&??????!!!!!((((((((((((((((()((((((((/**\n",
            "SSSSS&//(((((((((((((!!!!!!!!!!??????????!!?!!!!!!!(((((((((((((((())((((((()**/\n",
            "SSSS%)*)(((((((((((((!!!!!!!!!!!????!???!??!!!!!!(((((((((((((((((((((((((()/*//\n",
            "SSS%)**((!!(((((((((!!!!!!!!!!!!?!???!!!!!!!!!!!(((((((((((((((((((((((((((/*//*\n",
            "SS&/**/(((((((((((((!!!!!!!!!!!!!!!!!!!!!!!!!!(((((((((((((((((((((((((((()*//**\n",
            "S%)/**)!(((((((((((!!!!!!!!!!!!!!!!!!!!!!!!!!!!(((((((((((((((((((((((((()/*//*/\n",
            "\n"
          ]
        }
      ]
    }
  ]
}